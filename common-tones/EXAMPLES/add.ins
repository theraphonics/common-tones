(defvar amp-env-array (make-array 14))
(defvar frq-env-array (make-array 14))

(setf (aref amp-env-array 0) '(0 0 .038 0.126 .081 0.581 .122 0.675 .224 0.158 .344 0))
(setf (aref amp-env-array 1) '(0 0 .041 .041 .067 .115 .101 .143 .199 .015 .277 0 .344 0))
(setf (aref amp-env-array 2) '(0 0 .005 0 .066 .026 .083 .021 .106 .018 .127 .006 .212 0 .344 0))
(setf (aref amp-env-array 3) '(0 0 .008 0 .031 .01 .058 .018 .091 .019 .141 .005 .183 0 .344 0))
(setf (aref amp-env-array 4) '(0 0 .015 0 .052 .022 .072 .03 .088 .025 .126 .004 .138 0 .344 0))
(setf (aref amp-env-array 5) '(0 0 .023 0 .033 .006 .047 .007 .067 .006 .084 .003 .094 0 .344 0))
(setf (aref amp-env-array 6) '(0 0 .002 0 .018 .007 .038 .0001 .049 .009 .079 .004 .12 0 .344 0))
(setf (aref amp-env-array 7) '(0 0 .009 0 .029 .003 .063 .005 .097 .002 .117 .001 .133 0 .344 0))
(setf (aref amp-env-array 8) '(0 0 .013 0 .027 .0035 .044 .004 .061 .008 .101 .001 .109 0 .344 0))
(setf (aref amp-env-array 9) '(0 0 .012 0 .022 .0035 .055 .005 .074 .002 .094 .002 .101 0 .344 0))
(setf (aref amp-env-array 10) '(0 0 .019 0 .023 .001 .040 .002 .056 .002 .067 .001 .074 0 .344 0))
(setf (aref amp-env-array 11) '(0 0 .022 0 .029 .001 .038 .0015 .051 .001 .063 .0015 .072 0 .344 0))
(setf (aref amp-env-array 12) '(0 0 .019 0 .022 .0015 .024 .002 .038 .0005 .052 .0015 .058 0 .344 0))
(setf (aref amp-env-array 13) '(0 0 .02 0 .024 .0005 .033 .0005 .040 .001 .049 .0005 .056 0 .344 0))


(setf (aref frq-env-array 0) '(0 95 .006 299 .043 314 .086 312 .274 313 .344 314))
(setf (aref frq-env-array 1) '(0 339 .009 605 .036 629 .119 627 .244 629 .277 626 .278 0 .344 0))
(setf (aref frq-env-array 2) '(0 0 .004  0 .005 540 .009 915 .029 938 .083 949 .183 950 .212 946 .213 0 .344 0))
(setf (aref frq-env-array 3) '(0 0 .006 0 .008 780 .013 1225 .040 1258 .115 1259 .167 1265 .183 1255 .184 0 .344 0))
(setf (aref frq-env-array 4) '(0 0 .013 0 .015 1342 .019 1589 .023 1554 .099 1583 .133 1581 .138 1501 .140 0 .344 0))
(setf (aref frq-env-array 5) '(0 0 .022 0 .023 1344 .031 1874 .062 1903 .072 1903 .081 1899 .094 1771 .095 0 .344 0))
(setf (aref frq-env-array 6) '(0 0 .002 1470 .006 2121 .020 2188 .074 2193 .101 2214 .120 2193 .122 0 .344 0))
(setf (aref frq-env-array 7) '(0 0 .008 0 .009 1655 .013 2459 .026 2513 .049 2510 .080 2530 .133 2525 .134 0 .344 0))
(setf (aref frq-env-array 8) '(0 0 .012 0 .013 2464 .015 2704 .022 2815 .072 2845 .095 2841 .109 2803 .110 0 .344 0))
(setf (aref frq-env-array 9) '(0 0 .011 0 .012 2483 .015 3107 .045 3151 .079 3169 .095 3169 .101 3158 .102 0 .344 0))
(setf (aref frq-env-array 10) '(0 0 .018 0 .019 3131 .022 3463 .029 3438 .038 3459 .052 3467 .074 3451 .076 0 .344 0))
(setf (aref frq-env-array 11) '(0 0 .020 0 .022 3156 .024 3778 .029 3741 .034 3743 .051 3775 .072 3753 .073 0 .344 0))
(setf (aref frq-env-array 12) '(0 0 .018 0 .019 3278 .023 4078 .030 4063 .037 4087 .048 4092 .058 4079 .059 0 .344 0))
(setf (aref frq-env-array 13) '(0 0 .019 0 .020 3573 .022 4069 .029 4362 .040 4377 .047 4342 .056 4358 .058 0 .344 0))


(definstrument (complete-add)
    (begin-time dur amplitude amp-arr frq-arr &optional (freq 1.0) partials)
  (let* ((beg (floor (* begin-time *srate*)))
	 (end (+ beg (floor (* dur *srate*))))
	 (sum 0.0)
  	 (siz (or partials (min (array-dimension amp-arr 0) (array-dimension frq-arr 0))))
	 (s (make-array siz))
	 (ae (make-array siz))
	 (fe (make-array siz)))
    (loop for i below siz do
      (setf (aref s i) (make-oscil :frequency 0.0)) ; dealt with directly by the frequency function
      (setf (aref ae i) (make-env (aref amp-arr i) amplitude dur))
      (setf (aref fe i) (make-env (aref frq-arr i) (hz->radians freq) dur)))
    (run
     (loop for i from beg to end do
       (setf sum 0.0)
       (dotimes (j siz)
	 (incf sum (* (env (aref ae j)) 
		      (oscil (aref s j) (env (aref fe j))))))
       (outa i sum)))))
				   
(defun test-add () (complete-add 0 .5 .5 amp-env-array frq-env-array))



#|
;;; trumpet data typed in by Doug Fulton
(setf (aref amp-env-array 0) '(0 0   .001 0   .020 .8243242   .036 .91351354  .141 .77837837  .237 .21621622   .360 0))
(setf (aref amp-env-array 1) '(0 0  .003 0  .025 0.85675675   .039 0.9756757  .123 0.7972973  .222 0.10810811   .326 0 .360 0))
(setf (aref amp-env-array 2) '(0 0  .002 0  .019 0.27027026   .034 0.9972973  .111 0.92432433  .207 0.11081081   .273 0 .360 0))
(setf (aref amp-env-array 3) '(0 0  .003 0  .024 0.3054054   .029 0.6945946   .118 0.6243243   .187 0.0945946   .235 0 .360 0))
(setf (aref amp-env-array 4) '(0 0  .001 0  .027 0.14054054   .034 0.35135135  .110 0.34054053 .191 0.035135135  .234 0 .360 0))
(setf (aref amp-env-array 5) '(0 0  .001 0  .046 0.22432433   .064 0.27027026  .100 0.27027026 .189 0.02972973   .221 0 .360 0))
(setf (aref amp-env-array 6) '(0 0  .001 0  .037 0.105405405   .045 0.20810811  .110 0.21351351 .176 0.02972973   .205 0  .360 0))
(setf (aref amp-env-array 7) '(0 0  .002 0  .028 0.045945946   .043 0.1918919  .109 0.17837837  .172 0.021621622  .201 0  .360 0))
(setf (aref amp-env-array 8) '(0 0  .002 0  .029 0.043243244   .043 0.14324324  .054 0.17837837 .105 0.17297298  .165 0.018918918  .191 0 .360 0))
(setf (aref amp-env-array 9) '(0 0  .001 0  .027 0.016216217  .041 0.067567565  .056 0.07837838  .072 0.05945946  .095 0.06486487 .180 0 .360 0))
(setf (aref amp-env-array 10) '(0 0 .002 0  .037 0.016216217  .055 0.067567565  .088 0.07837838  .114 0.075675674  .164 0.008108108  .186 0 .360 0))
(setf (aref amp-env-array 11) '(0 0 .007 0  .039 0.008108108  .043 0.021621622  .088 0.02972973  .118 0.024324324  .138 0.008108108  .165 0 .360 0))

(setf (aref frq-env-array 0) '(0 0 .001 1.031733 .016 1.0413754 .032 1.002806 .109 0.99637777 .317 1.0092342 .360 0.99637777))
(setf (aref frq-env-array 1) '(0 0 .003 1.9509718 .016 2.111678 .024 1.9959697  .133 1.9959697 .275 2.0184684 .326 2.0184684 .360 2.0184684))
(setf (aref frq-env-array 2) '(0 0 .002 3.140197 .005 2.5134432 .015 3.1723382 .024 2.9955614 .128 2.9955614 .217 3.0084178 .273 3.037345 .360 3.037345))
(setf (aref frq-env-array 3) '(0 0 .003 2.3077395 .016 4.2908525 .024 3.9951534 .108 3.985511 .199 4.011224 .235 4.011224 .360 4.011224))
(setf (aref frq-env-array 4) '(0 0 .001 3.937299 .009 5.042957 .012 4.0787206 .021 5.0558133 .037 4.991531 .097 4.988317 .181 5.0333147 .234 5.0333147 .360 5.0333147))
(setf (aref frq-env-array 5) '(0 0 .001 4.7665424 .012 5.0525994 .023 6.389674 .033 5.9911227 .114 5.9911227 .177 6.003979 .221 6.039335 .360 6.039335))
(setf (aref frq-env-array 6) '(0 0 .001 5.759706 .009 5.1811643 .029 7.206061 .036 6.9875007 .093 6.993929 .126 6.974644 .205 7.0324984 .360 7.0324984))
(setf (aref frq-env-array 7) '(0 0 .002 5.1104536 .029 8.160655 .036 8.006377 .114 7.974236 .153 7.999949 .201 8.006377 .360 8.006377))
(setf (aref frq-env-array 8) '(0 0 .002 6.4057446 .025 6.817152 .032 9.067038 .037 8.986685 .084 8.993113 .105 8.973828 .191 8.989899 .360 8.989899))
(setf (aref frq-env-array 9) '(0 0 .001 5.599 .012 5.942911 .032 10.063416 .037 9.999133 .114 9.97342 .164 10.015203 .180 10.015203 .360 10.015203))
(setf (aref frq-env-array 10) '(0 0 .002 4.4933424 .041 10.989082 .091 10.989082 .106 10.947299 .150 10.99551 .186 10.99551 .360 10.99551 ))
(setf (aref frq-env-array 11) '(0 0 .006 0 .007 5.8047037 .023 9.455946 .036 8.867762 .037 12.0401 .050 11.966175 .084 11.991888 .110 11.959747 .156 12.02403 .165 11.63512 .360 11.63512))

(with-sound () (complete-add 0 .36 .15 amp-env-array frq-env-array 440 12))
|#
